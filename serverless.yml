service: pruebas-dynamo-ttl

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  profile: pruebas
  timeout: 30 # API Gateway is limited to 30 seconds
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'qa'}
  deploymentBucket:
    name: pruebas-dynamo-ttl
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"  

functions:
  scheduler:
    handler: src/handlers/scheduler.handler
    events:
      - http:
          path: /scheduler
          method: post
  mailer:
    handler: src/handlers/mailer.handler
    events:
      - stream:
          type: dynamodb
          arn: arn:aws:dynamodb:us-west-2:197776083821:table/deliveries-ttl/stream/2021-09-27T17:03:42.812
            # Fn::GetAtt: [deliveryScheduleTable, Arn]
      # - stream:
      #     type: dynamodb
      #     arn:
      #       Fn::ImportValue: MyExportedDynamoDbStreamArnId
      # - stream:
      #     type: dynamodb
      #     arn:
      #       Ref: MyDynamoDbTableStreamArn

# resources:
#   Resources:
#     deliveryScheduleTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: deliveryScheduleTable
#         TimeToLiveSpecification:
#           AttributeName: schedule_date
#           Enabled: true
#         AttributeDefinitions:
#           - AttributeName: "id"
#             AttributeType: "S"
#         KeySchema:
#           - AttributeName: "id"
#             KeyType: "HASH"
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1

package:
  excludeDevDependencies: true
  exclude:
    - .env.*
    - git_key
    - node_modules/aws*
